apply plugin: 'com.android.library'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'

android {
    compileSdkVersion 29
    buildToolsVersion "29.0.3"

    defaultConfig {
        minSdkVersion 16
        targetSdkVersion 29
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles 'consumer-rules.pro'
        externalNativeBuild {
            ndk {
                abiFilters 'armeabi-v7a', 'x86'
            }
            cmake {
                // Use the following syntax when passing arguments to variables:
                // arguments "-DVAR_NAME=ARGUMENT".
                //api level 19的so不能使用libc++编译，需要使用libstdc++
                arguments "-DANDROID_ARM_NEON=TRUE",
                        // If you're passing multiple arguments to a variable, pass them together:
                        // arguments "-DVAR_NAME=ARG_1 ARG_2"
                        // The following line passes 'rtti' and 'exceptions' to 'ANDROID_CPP_FEATURES'.
                        "-DANDROID_STL=c++_shared"
                cppFlags "-std=gnu++11"
            }
        }
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    externalNativeBuild {
        cmake {
            path "CMakeLists.txt"
        }
    }

}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$kotlin_version"
    implementation 'androidx.appcompat:appcompat:1.1.0'
    implementation 'androidx.core:core-ktx:1.2.0'
    implementation project(':pluginlib')
    testImplementation 'junit:junit:4.12'
    androidTestImplementation 'androidx.test.ext:junit:1.1.1'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.2.0'
}
